USE CP001;
GO

-- ================================================
-- Template generated from Template Explorer using:
-- Create Inline Function (New Menu).SQL
--
-- Use the Specify Values for Template Parameters 
-- command (Ctrl-Shift-M) to fill in the parameter 
-- values below.
--
-- This block of comments will not be included in
-- the definition of the function.
-- ================================================
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- UDF1 - udf_Ethnicity_Counter
-- =============================================
-- Author:		<Ambareesh Jonnavittula>
-- Create date: <01-May-2021>
-- Description:	<Input the country id and ethnicity which returns the filtered table>
-- =============================================
CREATE FUNCTION udf_Ethnicity_Counter
(	
	-- Add the parameters for the function here
	@countryid varchar(2),
	@chethnic varchar(20)
)
RETURNS TABLE 
AS
RETURN 
(
	-- Add the SELECT statement with parameter references here
	SELECT countryid, chethnic, count(distinct childid) as Num_of_Children
	FROM dbo.v01_WellBeing
	where countryid = @countryid and chethnic = @chethnic
	group by countryid, chethnic
)
GO



-- ================================================
-- Template generated from Template Explorer using:
-- Create Inline Function (New Menu).SQL
--
-- Use the Specify Values for Template Parameters 
-- command (Ctrl-Shift-M) to fill in the parameter 
-- values below.
--
-- This block of comments will not be included in
-- the definition of the function.
-- ================================================
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- UDF2 - udf_Find_Child_Gen_Characteristics
-- =============================================
-- Author:		<Ambareesh Jonnavittula>
-- Create date: <01-May-2021>
-- Description:	<To find the general characteristics based on childid and roundid>
-- =============================================
CREATE FUNCTION udf_Find_Child_Gen_Characteristics 
(
	-- Add the parameters for the function here
	@childid varchar(10),
	@round tinyint
)
RETURNS TABLE
AS
RETURN 
(
	-- Add the SELECT statement with parameter references here
	SELECT *
	FROM [dbCare].[ch_Identity]
	where childid = @childid and round = @round
)
GO

  -- ================================================
-- Template generated from Template Explorer using:
-- Create Scalar Function (New Menu).SQL
--
-- Use the Specify Values for Template Parameters 
-- command (Ctrl-Shift-M) to fill in the parameter 
-- values below.
--
-- This block of comments will not be included in
-- the definition of the function.
-- ================================================
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- UDF3 - udf_Find_Religion
-- =============================================
-- Author:		<Ambareesh Jonnavittula>
-- Create date: <01-May-2021>
-- Description:	<To bring the scalar value of Religion name from Religion ID>
-- =============================================
CREATE FUNCTION udf_Find_Religion
(
	-- Add the parameters for the function here
	@chldrelid int
)
RETURNS int
AS
BEGIN
	-- Declare the return variable here
	DECLARE @chldrel varchar(20)

	-- Add the T-SQL statements to compute the return value here
	select @chldrel = chldrel from dbCare.Religion
	where chldrelid = @chldrelid

	-- Return the result of the function
	RETURN @chldrel

END
GO


-- ================================================
-- Template generated from Template Explorer using:
-- Create Inline Function (New Menu).SQL
--
-- Use the Specify Values for Template Parameters 
-- command (Ctrl-Shift-M) to fill in the parameter 
-- values below.
--
-- This block of comments will not be included in
-- the definition of the function.
-- ================================================
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- UDF4 - udf_Find_total_livestock
-- =============================================
-- Author:		<Ambareesh Jonnavittula>
-- Create date: <01-May-2021>
-- Description:	<To find the total livestock in the last 12 months>
-- =============================================
CREATE FUNCTION udf_Find_total_livestock
(
	-- Add the parameters for the function here
	@countryid varchar(2),
	@childid varchar(10)
)
RETURNS TABLE
AS
RETURN 
(
	-- Add the SELECT statement with parameter references here
	select A.countryid, 
	   A.childid,
	   sum(iif(J.aniany = 'Yes', 1, 0)) as Any_Live_Stock_in_12_months
	from dbCare.ch_Identity A INNER JOIN dbCare.hh_LivestockOwnership J
	ON A.child_round_id = J.child_round_id
	WHERE A.countryid = @countryid AND A.childid = @childid
	group by A.countryid, A.childid
	having sum(iif(J.aniany = 'Yes', 1, 0)) <> 0
)
GO




-- ================================================
-- Template generated from Template Explorer using:
-- Create Inline Function (New Menu).SQL
--
-- Use the Specify Values for Template Parameters 
-- command (Ctrl-Shift-M) to fill in the parameter 
-- values below.
--
-- This block of comments will not be included in
-- the definition of the function.
-- ================================================
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- UDF5 - udf_Find_total_livestock_details
-- =============================================
-- Author:		<Ambareesh Jonnavittula>
-- Create date: <01-May-2021>
-- Description:	<To find the total livestock in the last 12 months list all>
-- =============================================
CREATE FUNCTION udf_Find_total_livestock_details
(
	-- Add the parameters for the function here
	@countryid varchar(2),
	@childid varchar(10)
)
RETURNS TABLE
AS
RETURN 
(
	-- Add the SELECT statement with parameter references here
	select A.countryid, 
		   A.childid,
	   sum([anibeeh]) as Num_of_BeeHives
      ,sum([anibufm]) as Num_of_modern_Buffalos
      ,sum([anibuft]) as Num_of_traditional_Buffalos
      ,sum([anibull]) as Num_of_Bullocks
      ,sum([anicalv]) as Num_of_calves
      ,sum([anicaml]) as Num_of_camels
      ,sum([anicowm]) as Num_of_modern_cows
      ,sum([anicowt]) as Num_of_traditional_cows
      ,sum([anidonk]) as Num_of_donkeys
      ,sum([anidrau]) as Num_of_draught_animals
      ,sum([anifish]) as Num_of_fish
      ,sum([anifshr]) as Num_of_fisheries
      ,sum([anigoat]) as Num_of_goats
      ,sum([aniguin]) as Num_of_guinea_pigs
      ,sum([anihebu]) as Num_of_hebuffalos
      ,sum([aniheif]) as Num_of_heifers
      ,sum([anillam]) as Num_of_llamas
      ,sum([animilk]) as Num_of_Milk_Animals
      ,sum([aniothr]) as Num_of_other
      ,sum([anioxen]) as Num_of_oxen
      ,sum([anipigs]) as Num_of_pigs
      ,sum([anipoul]) as Num_of_poultry
      ,sum([anirabb]) as Num_of_rabbits
      ,sum([anirumi]) as Num_of_small_rumiants
      ,sum([anishee]) as Num_of_sheep
      ,sum([anishri]) as Num_of_shrimp
      ,sum([anisnai]) as Num_of_snails
      ,sum([anispec]) as Num_of_other_animals
      ,sum([aniybul]) as Num_of_young_bulls
	from dbCare.ch_Identity A INNER JOIN dbCare.hh_LivestockOwnership J
	ON A.child_round_id = J.child_round_id
	WHERE A.countryid = @countryid AND A.childid = @childid
	group by A.countryid, A.childid
	having sum(iif(J.aniany = 'Yes', 1, 0)) <> 0
)
GO






